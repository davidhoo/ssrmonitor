package main

import (
	"encoding/base64"
	"fmt"
	"net/url"
	"strings"
)

func main() {

	str := getRssFeed()

	bodyData, _ := base64.StdEncoding.DecodeString(str)

	feeds := strings.Split(string(bodyData), "\n")
	u, _ := url.Parse(feeds[1])
	user, _ := base64.StdEncoding.DecodeString(u.User.String())
	fmt.Println(string(user))

	fmt.Printf("%+v\n", *u)
	m, _ := url.ParseQuery(u.RawQuery)
	fmt.Println(u.RawQuery)
	fmt.Println(m)
	/*
		ss://Y2hhY2hhMjAtaWV0Zi1wb2x5MTMwNTpGWXVHYUV0eQ@103.219.194.99:152?plugin=simple-obfs%3Bobfs%3Dtls%3Bobfs-host%3D7769018815.msn.microsoft.com#%E5%8D%95%E7%AB%AF%E5%8F%A3-%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9-103-%E7%BE%8E%E5%9B%BD%E5%8D%95%E7%AB%AF%E5%8F%A3%E5%85%8D%E8%B4%B9%E8%8A%82%E7%82%B9

		url := "https://cdnapi.fyapi.net/index.php?m=fyzhujicloudpane&command=FYAUTHAPISsrJsonSub&port=146857&authcode=FYZHUJI1707GUpbtOuGsk88SPw"
			   	resp, err := http.Get(url)
			   	if err != nil {
			   		//
			   	}
			   	defer resp.Body.Close()
			   	body, _ := ioutil.ReadAll(resp.Body)
			   	str, _ := base64.StdEncoding.DecodeString(string(body))
			   	ss := strings.Split(string(str), "\n")
			   	for _, s := range ss {
			   		line, _ := base64.StdEncoding.DecodeString(s)
			   		fmt.Println(string(line))

			   	} */
	/* req, _ := http.NewRequest("GET", url, nil)
	res, _ := http.DefaultClient.Do(req)
	defer res.Body.Close()
	body, _ := ioutil.ReadAll(res.Body)

	fmt.Printf("%s", body) */
}

func getRssFeed() string {
	return ""
}
